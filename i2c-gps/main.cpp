#include <stdio.h>
#include <pthread.h>
#include <unistd.h>
#include "i2c-gps.h"
#include "Ublox.h"
unsigned char gps_config_change[80] = {
  /*timepulse*/
//0xB5, 0x62, 0x06, 0x07, 0x14, 0x00, 0xA0, 0x86, 0x01, 0x00, 0x50, 0xC3, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x34, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x93, 0x9B,
/* 10Hz, 50% */

0xB5, 0x62, 0x06, 0x31, 0x20, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x80, 0xCC, 0xCC, 0xCC, 0x4C, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00,
0x00, 0x00, 0xAB, 0x56,
	//0xB5, 0x62, 0x06, 0x08, 0x06, 0x00, 0xF4, 0x01, 0x01, 0x00, 0x01, 0x00,
  //0x0B, 0x77, /*500ms*/
  //0xB5, 0x62, 0x06, 0x08, 0x06, 0x00, 0xD0, 0x07, 0x01, 0x00, 0x01, 0x00,
   //0xED, 0xBD, /*2s*/


};


void* gpsdata_decode_loop(void * parm) {
	Ublox *M8_Gps_ = (Ublox*)parm;
	i2cgps gps;

	int totalBytes, bytes;
	while(1) {
		totalBytes = gps.get_byte_available();
		while (totalBytes > 0) {
		    bytes = gps.get_gps_data2buf(totalBytes);
		    if(bytes < 0){
		    	printf("gpsdata_decode_loop: bytes<0!\n");
		    	exit(0);
		    }
		    for (int i = 0; i < bytes; i++) {
		      if((gps.gpsdata_buf())[i]!=0xff)
		        M8_Gps_->encode((char)(gps.gpsdata_buf())[i]);
		    }
		    totalBytes -= bytes;
		}
	}
}

int main(){

	int byte2read;
//	i2cgps gps;
//	gps.init();
//	printf("%d\n",gps.write_gps_config(gps_config_change, 40));


	pthread_t id;
	Ublox * m8_Gps = new Ublox();
	int ret = pthread_create(&id, NULL, gpsdata_decode_loop, (void*)m8_Gps);
	sleep(5);
	while(1){
		printf("latitude: %f, longitude: %f, TIME: %d:%d:%d\n",
				m8_Gps->latitude,m8_Gps->longitude,
				m8_Gps->datetime.hours, m8_Gps->datetime.minutes, m8_Gps->datetime.seconds);
		sleep(1);
	}
	return 0;
}
